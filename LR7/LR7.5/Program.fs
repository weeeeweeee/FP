// Learn more about F# at http://docs.microsoft.com/dotnet/fsharp

open System

// Дан массив чисел. Необходимо проверить, чередуются ли в нем
// целые и вещественные числа.

let isInteger (x : float32) =
    if x - (floor x) = 0.f then
        1
    else
        -1

let func list =
    let lst = List.map isInteger list
    let shiftLst = List.permute (fun x -> (x + 1) % (List.length lst)) lst
    let ziplist = List.skip 1 (List.zip lst shiftLst)
    not (List.exists (fun x -> ((fst x) * (snd x)) <> -1) ziplist)
// Арсений Сергеевич, я сейчас всё объясню! В первой строке я приме-
// няю к каждому элементу списка функцию isInteger, которая возвра-
// щает -1, если элемент вещественный, и 1, если элемент целочислен-
// ный. Затем во второй строке я сдвигаю список на один элемент
// вправо. В третьей строке я соединяю два списка в один, состоящий
// из пар элементов первого и второго списков, но убираю первый эле-
// мент (иначе функция будет отбраковывать все списки, у которых пер-
// вый и последний элемент оба целочисленные или оба вещественные)
// ziplist содержит пары элементов типа (1, -1), (1, 1) и т.д.
// Нам подходит только тот случай, когда все пары это либо (1, -1),
// либо (-1, 1), что я и проверяю в последней строке.

[<EntryPoint>]
let main argv =
    let list = [1.f; 1.1f; 2.f; 2.2f; 3f; 3.3f; 4.f; 4.4f; 5.f; 5.5f]
    printf "%b" (func list)
    0